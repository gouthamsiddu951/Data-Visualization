{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMuYUlMjdYJlq24ttQLfRog"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"B5o1aRyEjfC6"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"5ca90983"},"source":["# Task\n","Analyze real estate data from \"/content/realtor-data.zip.csv\" by identifying key attributes, visualizing price vs area, representing property type hierarchy, and visualizing property distribution on a map. Provide guidance on building an interactive real estate price analyzer in Power BI."]},{"cell_type":"markdown","metadata":{"id":"719481d0"},"source":["## Load the data\n","\n","### Subtask:\n","Load the data from the \"/content/realtor-data.zip.csv\" file into a pandas DataFrame.\n"]},{"cell_type":"markdown","metadata":{"id":"26271854"},"source":["**Reasoning**:\n","Import the pandas library and load the data from the specified CSV file into a DataFrame.\n","\n"]},{"cell_type":"code","metadata":{"id":"bc0d1d3e","executionInfo":{"status":"ok","timestamp":1761147336070,"user_tz":-330,"elapsed":1488,"user":{"displayName":"MADASU. GOWTHAM KUMAR SWAMY,CSE(2022) Vel Tech, Chennai","userId":"16141096446472250451"}}},"source":["import pandas as pd\n","\n","df = pd.read_csv(\"/content/realtor-data.zip.csv\")"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"395517a3"},"source":["## Identify dataset attributes\n","\n","### Subtask:\n","Display the columns and data types of the DataFrame to identify the relevant attributes (price, area, location, type).\n"]},{"cell_type":"markdown","metadata":{"id":"ab660f7d"},"source":["**Reasoning**:\n","Print the column names and data types of the DataFrame to identify relevant attributes.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b2e36bfd","executionInfo":{"status":"ok","timestamp":1761147349648,"user_tz":-330,"elapsed":82,"user":{"displayName":"MADASU. GOWTHAM KUMAR SWAMY,CSE(2022) Vel Tech, Chennai","userId":"16141096446472250451"}},"outputId":"fe92769c-c4eb-43a4-cee9-4f9785c050f5"},"source":["print(\"Column Names:\")\n","print(df.columns)\n","print(\"\\nData Types:\")\n","df.info()"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Column Names:\n","Index(['brokered_by', 'status', 'price', 'bed', 'bath', 'acre_lot', 'street',\n","       'city', 'state', 'zip_code', 'house_size', 'prev_sold_date'],\n","      dtype='object')\n","\n","Data Types:\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 256708 entries, 0 to 256707\n","Data columns (total 12 columns):\n"," #   Column          Non-Null Count   Dtype  \n","---  ------          --------------   -----  \n"," 0   brokered_by     256568 non-null  float64\n"," 1   status          256708 non-null  object \n"," 2   price           256668 non-null  float64\n"," 3   bed             208381 non-null  float64\n"," 4   bath            206068 non-null  float64\n"," 5   acre_lot        200526 non-null  float64\n"," 6   street          255456 non-null  float64\n"," 7   city            256667 non-null  object \n"," 8   state           256708 non-null  object \n"," 9   zip_code        256656 non-null  float64\n"," 10  house_size      179995 non-null  float64\n"," 11  prev_sold_date  133594 non-null  object \n","dtypes: float64(8), object(4)\n","memory usage: 23.5+ MB\n"]}]},{"cell_type":"markdown","metadata":{"id":"f327721e"},"source":["## Analyze price vs area\n","\n","### Subtask:\n","Generate scatter and violin plots to visualize the relationship between price and area.\n"]},{"cell_type":"markdown","metadata":{"id":"d2d89e5e"},"source":["**Reasoning**:\n","Create scatter and violin plots to visualize the relationship between price and house size, handling missing values and adding appropriate labels and titles.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"34beafeb","executionInfo":{"status":"ok","timestamp":1761148569320,"user_tz":-330,"elapsed":1202745,"user":{"displayName":"MADASU. GOWTHAM KUMAR SWAMY,CSE(2022) Vel Tech, Chennai","userId":"16141096446472250451"}},"outputId":"60154b04-aeba-41eb-efa0-8d971fcab878"},"source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Drop rows with missing values in 'price' or 'house_size' for plotting\n","df_plot = df.dropna(subset=['price', 'house_size']).copy()\n","\n","# Create scatter plot\n","plt.figure(figsize=(10, 6))\n","sns.scatterplot(data=df_plot, x='house_size', y='price')\n","plt.title('Scatter Plot of Price vs. House Size')\n","plt.xlabel('House Size')\n","plt.ylabel('Price')\n","plt.show()\n","\n","# Create violin plot\n","plt.figure(figsize=(10, 6))\n","sns.violinplot(data=df_plot, x='house_size', y='price')\n","plt.title('Violin Plot of Price vs. House Size')\n","plt.xlabel('House Size')\n","plt.ylabel('Price')\n","plt.show()"],"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"ab444f8a"},"source":["## Represent property type hierarchy\n","\n","### Subtask:\n","Create a TreeMap to show the hierarchy of property types.\n"]},{"cell_type":"markdown","metadata":{"id":"31e69237"},"source":["**Reasoning**:\n","Create a new column 'property_type' based on 'bed' and 'bath' columns, handling NaN values, and then generate a TreeMap using plotly express to visualize the hierarchy of property types based on price.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"f3f17cd3","executionInfo":{"status":"ok","timestamp":1761148599344,"user_tz":-330,"elapsed":12742,"user":{"displayName":"MADASU. GOWTHAM KUMAR SWAMY,CSE(2022) Vel Tech, Chennai","userId":"16141096446472250451"}},"outputId":"cb638c4d-4eec-464d-db85-2d1215269446"},"source":["import plotly.express as px\n","import numpy as np\n","\n","# Create 'property_type' column\n","def categorize_property(row):\n","    bed = row['bed']\n","    bath = row['bath']\n","    if pd.isna(bed) or pd.isna(bath):\n","        return 'Unknown Type'\n","    elif bed == 0 and bath >= 1:\n","        return 'Studio'\n","    elif bed >= 1 and bath >= 1:\n","        return f'{int(bed)} Bed {int(bath)} Bath'\n","    else:\n","        return 'Other'\n","\n","df_plot['property_type'] = df_plot.apply(categorize_property, axis=1)\n","\n","# Create TreeMap\n","fig = px.treemap(df_plot, path=['property_type'], values='price',\n","                 title='Property Type Hierarchy by Price')\n","fig.show()"],"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"ef21888a-ff9a-4986-a030-64fc72d6b809\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ef21888a-ff9a-4986-a030-64fc72d6b809\")) {                    Plotly.newPlot(                        \"ef21888a-ff9a-4986-a030-64fc72d6b809\",                        [{\"branchvalues\":\"total\",\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"labels=%{label}\\u003cbr\\u003eprice=%{value}\\u003cbr\\u003eparent=%{parent}\\u003cbr\\u003eid=%{id}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"ids\":[\"1 Bed 1 Bath\",\"1 Bed 10 Bath\",\"1 Bed 2 Bath\",\"1 Bed 3 Bath\",\"1 Bed 4 Bath\",\"1 Bed 5 Bath\",\"1 Bed 6 Bath\",\"10 Bed 1 Bath\",\"10 Bed 10 Bath\",\"10 Bed 11 Bath\",\"10 Bed 12 Bath\",\"10 Bed 13 Bath\",\"10 Bed 14 Bath\",\"10 Bed 15 Bath\",\"10 Bed 17 Bath\",\"10 Bed 18 Bath\",\"10 Bed 2 Bath\",\"10 Bed 3 Bath\",\"10 Bed 4 Bath\",\"10 Bed 5 Bath\",\"10 Bed 6 Bath\",\"10 Bed 7 Bath\",\"10 Bed 8 Bath\",\"10 Bed 9 Bath\",\"11 Bed 10 Bath\",\"11 Bed 11 Bath\",\"11 Bed 12 Bath\",\"11 Bed 13 Bath\",\"11 Bed 14 Bath\",\"11 Bed 15 Bath\",\"11 Bed 16 Bath\",\"11 Bed 17 Bath\",\"11 Bed 3 Bath\",\"11 Bed 4 Bath\",\"11 Bed 5 Bath\",\"11 Bed 6 Bath\",\"11 Bed 7 Bath\",\"11 Bed 8 Bath\",\"11 Bed 9 Bath\",\"12 Bed 10 Bath\",\"12 Bed 11 Bath\",\"12 Bed 12 Bath\",\"12 Bed 13 Bath\",\"12 Bed 14 Bath\",\"12 Bed 16 Bath\",\"12 Bed 18 Bath\",\"12 Bed 2 Bath\",\"12 Bed 3 Bath\",\"12 Bed 4 Bath\",\"12 Bed 5 Bath\",\"12 Bed 6 Bath\",\"12 Bed 7 Bath\",\"12 Bed 8 Bath\",\"12 Bed 9 Bath\",\"13 Bed 10 Bath\",\"13 Bed 11 Bath\",\"13 Bed 12 Bath\",\"13 Bed 13 Bath\",\"13 Bed 14 Bath\",\"13 Bed 17 Bath\",\"13 Bed 20 Bath\",\"13 Bed 3 Bath\",\"13 Bed 4 Bath\",\"13 Bed 5 Bath\",\"13 Bed 6 Bath\",\"13 Bed 7 Bath\",\"13 Bed 8 Bath\",\"13 Bed 9 Bath\",\"14 Bed 10 Bath\",\"14 Bed 11 Bath\",\"14 Bed 12 Bath\",\"14 Bed 14 Bath\",\"14 Bed 15 Bath\",\"14 Bed 16 Bath\",\"14 Bed 17 Bath\",\"14 Bed 18 Bath\",\"14 Bed 19 Bath\",\"14 Bed 20 Bath\",\"14 Bed 3 Bath\",\"14 Bed 4 Bath\",\"14 Bed 5 Bath\",\"14 Bed 6 Bath\",\"14 Bed 7 Bath\",\"14 Bed 8 Bath\",\"14 Bed 9 Bath\",\"15 Bed 10 Bath\",\"15 Bed 11 Bath\",\"15 Bed 12 Bath\",\"15 Bed 14 Bath\",\"15 Bed 15 Bath\",\"15 Bed 20 Bath\",\"15 Bed 4 Bath\",\"15 Bed 5 Bath\",\"15 Bed 6 Bath\",\"15 Bed 7 Bath\",\"15 Bed 8 Bath\",\"15 Bed 9 Bath\",\"16 Bed 12 Bath\",\"16 Bed 13 Bath\",\"16 Bed 14 Bath\",\"16 Bed 15 Bath\",\"16 Bed 16 Bath\",\"16 Bed 18 Bath\",\"16 Bed 21 Bath\",\"16 Bed 4 Bath\",\"16 Bed 6 Bath\",\"16 Bed 8 Bath\",\"16 Bed 9 Bath\",\"17 Bed 10 Bath\",\"17 Bed 11 Bath\",\"17 Bed 12 Bath\",\"17 Bed 13 Bath\",\"17 Bed 14 Bath\",\"17 Bed 16 Bath\",\"17 Bed 17 Bath\",\"17 Bed 18 Bath\",\"17 Bed 5 Bath\",\"17 Bed 6 Bath\",\"17 Bed 7 Bath\",\"17 Bed 8 Bath\",\"17 Bed 9 Bath\",\"18 Bed 10 Bath\",\"18 Bed 12 Bath\",\"18 Bed 17 Bath\",\"18 Bed 18 Bath\",\"18 Bed 5 Bath\",\"18 Bed 6 Bath\",\"18 Bed 7 Bath\",\"18 Bed 8 Bath\",\"18 Bed 9 Bath\",\"19 Bed 10 Bath\",\"19 Bed 11 Bath\",\"19 Bed 16 Bath\",\"19 Bed 19 Bath\",\"19 Bed 24 Bath\",\"19 Bed 4 Bath\",\"19 Bed 5 Bath\",\"19 Bed 8 Bath\",\"19 Bed 9 Bath\",\"2 Bed 1 Bath\",\"2 Bed 11 Bath\",\"2 Bed 2 Bath\",\"2 Bed 3 Bath\",\"2 Bed 4 Bath\",\"2 Bed 5 Bath\",\"2 Bed 6 Bath\",\"2 Bed 7 Bath\",\"2 Bed 8 Bath\",\"20 Bed 10 Bath\",\"20 Bed 11 Bath\",\"20 Bed 13 Bath\",\"20 Bed 15 Bath\",\"20 Bed 16 Bath\",\"20 Bed 18 Bath\",\"20 Bed 20 Bath\",\"20 Bed 21 Bath\",\"20 Bed 22 Bath\",\"20 Bed 24 Bath\",\"20 Bed 6 Bath\",\"20 Bed 8 Bath\",\"20 Bed 9 Bath\",\"21 Bed 12 Bath\",\"21 Bed 14 Bath\",\"21 Bed 22 Bath\",\"21 Bed 25 Bath\",\"21 Bed 7 Bath\",\"21 Bed 8 Bath\",\"22 Bed 10 Bath\",\"22 Bed 12 Bath\",\"22 Bed 15 Bath\",\"22 Bed 19 Bath\",\"22 Bed 6 Bath\",\"22 Bed 8 Bath\",\"23 Bed 10 Bath\",\"23 Bed 12 Bath\",\"23 Bed 16 Bath\",\"23 Bed 2 Bath\",\"24 Bed 16 Bath\",\"24 Bed 19 Bath\",\"24 Bed 22 Bath\",\"24 Bed 9 Bath\",\"25 Bed 25 Bath\",\"25 Bed 28 Bath\",\"26 Bed 16 Bath\",\"27 Bed 20 Bath\",\"27 Bed 9 Bath\",\"28 Bed 14 Bath\",\"28 Bed 16 Bath\",\"28 Bed 22 Bath\",\"28 Bed 29 Bath\",\"28 Bed 33 Bath\",\"28 Bed 4 Bath\",\"29 Bed 16 Bath\",\"3 Bed 1 Bath\",\"3 Bed 10 Bath\",\"3 Bed 2 Bath\",\"3 Bed 3 Bath\",\"3 Bed 4 Bath\",\"3 Bed 5 Bath\",\"3 Bed 6 Bath\",\"3 Bed 7 Bath\",\"3 Bed 8 Bath\",\"3 Bed 9 Bath\",\"30 Bed 17 Bath\",\"31 Bed 14 Bath\",\"31 Bed 27 Bath\",\"32 Bed 28 Bath\",\"33 Bed 15 Bath\",\"33 Bed 35 Bath\",\"35 Bed 45 Bath\",\"36 Bed 12 Bath\",\"38 Bed 10 Bath\",\"4 Bed 1 Bath\",\"4 Bed 10 Bath\",\"4 Bed 2 Bath\",\"4 Bed 3 Bath\",\"4 Bed 4 Bath\",\"4 Bed 5 Bath\",\"4 Bed 6 Bath\",\"4 Bed 7 Bath\",\"4 Bed 8 Bath\",\"4 Bed 9 Bath\",\"40 Bed 35 Bath\",\"40 Bed 36 Bath\",\"42 Bed 42 Bath\",\"42 Bed 43 Bath\",\"46 Bed 46 Bath\",\"47 Bed 39 Bath\",\"49 Bed 15 Bath\",\"5 Bed 1 Bath\",\"5 Bed 10 Bath\",\"5 Bed 11 Bath\",\"5 Bed 12 Bath\",\"5 Bed 2 Bath\",\"5 Bed 3 Bath\",\"5 Bed 4 Bath\",\"5 Bed 5 Bath\",\"5 Bed 6 Bath\",\"5 Bed 7 Bath\",\"5 Bed 8 Bath\",\"5 Bed 9 Bath\",\"53 Bed 31 Bath\",\"6 Bed 1 Bath\",\"6 Bed 10 Bath\",\"6 Bed 11 Bath\",\"6 Bed 12 Bath\",\"6 Bed 14 Bath\",\"6 Bed 2 Bath\",\"6 Bed 3 Bath\",\"6 Bed 4 Bath\",\"6 Bed 5 Bath\",\"6 Bed 6 Bath\",\"6 Bed 7 Bath\",\"6 Bed 8 Bath\",\"6 Bed 9 Bath\",\"60 Bed 51 Bath\",\"64 Bed 64 Bath\",\"68 Bed 28 Bath\",\"7 Bed 1 Bath\",\"7 Bed 10 Bath\",\"7 Bed 11 Bath\",\"7 Bed 12 Bath\",\"7 Bed 13 Bath\",\"7 Bed 14 Bath\",\"7 Bed 2 Bath\",\"7 Bed 3 Bath\",\"7 Bed 4 Bath\",\"7 Bed 5 Bath\",\"7 Bed 6 Bath\",\"7 Bed 7 Bath\",\"7 Bed 8 Bath\",\"7 Bed 9 Bath\",\"70 Bed 45 Bath\",\"75 Bed 30 Bath\",\"8 Bed 1 Bath\",\"8 Bed 10 Bath\",\"8 Bed 11 Bath\",\"8 Bed 12 Bath\",\"8 Bed 13 Bath\",\"8 Bed 14 Bath\",\"8 Bed 15 Bath\",\"8 Bed 2 Bath\",\"8 Bed 3 Bath\",\"8 Bed 4 Bath\",\"8 Bed 5 Bath\",\"8 Bed 6 Bath\",\"8 Bed 7 Bath\",\"8 Bed 8 Bath\",\"8 Bed 9 Bath\",\"86 Bed 56 Bath\",\"9 Bed 10 Bath\",\"9 Bed 11 Bath\",\"9 Bed 12 Bath\",\"9 Bed 13 Bath\",\"9 Bed 14 Bath\",\"9 Bed 15 Bath\",\"9 Bed 16 Bath\",\"9 Bed 17 Bath\",\"9 Bed 19 Bath\",\"9 Bed 2 Bath\",\"9 Bed 3 Bath\",\"9 Bed 4 Bath\",\"9 Bed 5 Bath\",\"9 Bed 6 Bath\",\"9 Bed 7 Bath\",\"9 Bed 8 Bath\",\"9 Bed 9 Bath\",\"99 Bed 198 Bath\",\"Unknown Type\"],\"labels\":[\"1 Bed 1 Bath\",\"1 Bed 10 Bath\",\"1 Bed 2 Bath\",\"1 Bed 3 Bath\",\"1 Bed 4 Bath\",\"1 Bed 5 Bath\",\"1 Bed 6 Bath\",\"10 Bed 1 Bath\",\"10 Bed 10 Bath\",\"10 Bed 11 Bath\",\"10 Bed 12 Bath\",\"10 Bed 13 Bath\",\"10 Bed 14 Bath\",\"10 Bed 15 Bath\",\"10 Bed 17 Bath\",\"10 Bed 18 Bath\",\"10 Bed 2 Bath\",\"10 Bed 3 Bath\",\"10 Bed 4 Bath\",\"10 Bed 5 Bath\",\"10 Bed 6 Bath\",\"10 Bed 7 Bath\",\"10 Bed 8 Bath\",\"10 Bed 9 Bath\",\"11 Bed 10 Bath\",\"11 Bed 11 Bath\",\"11 Bed 12 Bath\",\"11 Bed 13 Bath\",\"11 Bed 14 Bath\",\"11 Bed 15 Bath\",\"11 Bed 16 Bath\",\"11 Bed 17 Bath\",\"11 Bed 3 Bath\",\"11 Bed 4 Bath\",\"11 Bed 5 Bath\",\"11 Bed 6 Bath\",\"11 Bed 7 Bath\",\"11 Bed 8 Bath\",\"11 Bed 9 Bath\",\"12 Bed 10 Bath\",\"12 Bed 11 Bath\",\"12 Bed 12 Bath\",\"12 Bed 13 Bath\",\"12 Bed 14 Bath\",\"12 Bed 16 Bath\",\"12 Bed 18 Bath\",\"12 Bed 2 Bath\",\"12 Bed 3 Bath\",\"12 Bed 4 Bath\",\"12 Bed 5 Bath\",\"12 Bed 6 Bath\",\"12 Bed 7 Bath\",\"12 Bed 8 Bath\",\"12 Bed 9 Bath\",\"13 Bed 10 Bath\",\"13 Bed 11 Bath\",\"13 Bed 12 Bath\",\"13 Bed 13 Bath\",\"13 Bed 14 Bath\",\"13 Bed 17 Bath\",\"13 Bed 20 Bath\",\"13 Bed 3 Bath\",\"13 Bed 4 Bath\",\"13 Bed 5 Bath\",\"13 Bed 6 Bath\",\"13 Bed 7 Bath\",\"13 Bed 8 Bath\",\"13 Bed 9 Bath\",\"14 Bed 10 Bath\",\"14 Bed 11 Bath\",\"14 Bed 12 Bath\",\"14 Bed 14 Bath\",\"14 Bed 15 Bath\",\"14 Bed 16 Bath\",\"14 Bed 17 Bath\",\"14 Bed 18 Bath\",\"14 Bed 19 Bath\",\"14 Bed 20 Bath\",\"14 Bed 3 Bath\",\"14 Bed 4 Bath\",\"14 Bed 5 Bath\",\"14 Bed 6 Bath\",\"14 Bed 7 Bath\",\"14 Bed 8 Bath\",\"14 Bed 9 Bath\",\"15 Bed 10 Bath\",\"15 Bed 11 Bath\",\"15 Bed 12 Bath\",\"15 Bed 14 Bath\",\"15 Bed 15 Bath\",\"15 Bed 20 Bath\",\"15 Bed 4 Bath\",\"15 Bed 5 Bath\",\"15 Bed 6 Bath\",\"15 Bed 7 Bath\",\"15 Bed 8 Bath\",\"15 Bed 9 Bath\",\"16 Bed 12 Bath\",\"16 Bed 13 Bath\",\"16 Bed 14 Bath\",\"16 Bed 15 Bath\",\"16 Bed 16 Bath\",\"16 Bed 18 Bath\",\"16 Bed 21 Bath\",\"16 Bed 4 Bath\",\"16 Bed 6 Bath\",\"16 Bed 8 Bath\",\"16 Bed 9 Bath\",\"17 Bed 10 Bath\",\"17 Bed 11 Bath\",\"17 Bed 12 Bath\",\"17 Bed 13 Bath\",\"17 Bed 14 Bath\",\"17 Bed 16 Bath\",\"17 Bed 17 Bath\",\"17 Bed 18 Bath\",\"17 Bed 5 Bath\",\"17 Bed 6 Bath\",\"17 Bed 7 Bath\",\"17 Bed 8 Bath\",\"17 Bed 9 Bath\",\"18 Bed 10 Bath\",\"18 Bed 12 Bath\",\"18 Bed 17 Bath\",\"18 Bed 18 Bath\",\"18 Bed 5 Bath\",\"18 Bed 6 Bath\",\"18 Bed 7 Bath\",\"18 Bed 8 Bath\",\"18 Bed 9 Bath\",\"19 Bed 10 Bath\",\"19 Bed 11 Bath\",\"19 Bed 16 Bath\",\"19 Bed 19 Bath\",\"19 Bed 24 Bath\",\"19 Bed 4 Bath\",\"19 Bed 5 Bath\",\"19 Bed 8 Bath\",\"19 Bed 9 Bath\",\"2 Bed 1 Bath\",\"2 Bed 11 Bath\",\"2 Bed 2 Bath\",\"2 Bed 3 Bath\",\"2 Bed 4 Bath\",\"2 Bed 5 Bath\",\"2 Bed 6 Bath\",\"2 Bed 7 Bath\",\"2 Bed 8 Bath\",\"20 Bed 10 Bath\",\"20 Bed 11 Bath\",\"20 Bed 13 Bath\",\"20 Bed 15 Bath\",\"20 Bed 16 Bath\",\"20 Bed 18 Bath\",\"20 Bed 20 Bath\",\"20 Bed 21 Bath\",\"20 Bed 22 Bath\",\"20 Bed 24 Bath\",\"20 Bed 6 Bath\",\"20 Bed 8 Bath\",\"20 Bed 9 Bath\",\"21 Bed 12 Bath\",\"21 Bed 14 Bath\",\"21 Bed 22 Bath\",\"21 Bed 25 Bath\",\"21 Bed 7 Bath\",\"21 Bed 8 Bath\",\"22 Bed 10 Bath\",\"22 Bed 12 Bath\",\"22 Bed 15 Bath\",\"22 Bed 19 Bath\",\"22 Bed 6 Bath\",\"22 Bed 8 Bath\",\"23 Bed 10 Bath\",\"23 Bed 12 Bath\",\"23 Bed 16 Bath\",\"23 Bed 2 Bath\",\"24 Bed 16 Bath\",\"24 Bed 19 Bath\",\"24 Bed 22 Bath\",\"24 Bed 9 Bath\",\"25 Bed 25 Bath\",\"25 Bed 28 Bath\",\"26 Bed 16 Bath\",\"27 Bed 20 Bath\",\"27 Bed 9 Bath\",\"28 Bed 14 Bath\",\"28 Bed 16 Bath\",\"28 Bed 22 Bath\",\"28 Bed 29 Bath\",\"28 Bed 33 Bath\",\"28 Bed 4 Bath\",\"29 Bed 16 Bath\",\"3 Bed 1 Bath\",\"3 Bed 10 Bath\",\"3 Bed 2 Bath\",\"3 Bed 3 Bath\",\"3 Bed 4 Bath\",\"3 Bed 5 Bath\",\"3 Bed 6 Bath\",\"3 Bed 7 Bath\",\"3 Bed 8 Bath\",\"3 Bed 9 Bath\",\"30 Bed 17 Bath\",\"31 Bed 14 Bath\",\"31 Bed 27 Bath\",\"32 Bed 28 Bath\",\"33 Bed 15 Bath\",\"33 Bed 35 Bath\",\"35 Bed 45 Bath\",\"36 Bed 12 Bath\",\"38 Bed 10 Bath\",\"4 Bed 1 Bath\",\"4 Bed 10 Bath\",\"4 Bed 2 Bath\",\"4 Bed 3 Bath\",\"4 Bed 4 Bath\",\"4 Bed 5 Bath\",\"4 Bed 6 Bath\",\"4 Bed 7 Bath\",\"4 Bed 8 Bath\",\"4 Bed 9 Bath\",\"40 Bed 35 Bath\",\"40 Bed 36 Bath\",\"42 Bed 42 Bath\",\"42 Bed 43 Bath\",\"46 Bed 46 Bath\",\"47 Bed 39 Bath\",\"49 Bed 15 Bath\",\"5 Bed 1 Bath\",\"5 Bed 10 Bath\",\"5 Bed 11 Bath\",\"5 Bed 12 Bath\",\"5 Bed 2 Bath\",\"5 Bed 3 Bath\",\"5 Bed 4 Bath\",\"5 Bed 5 Bath\",\"5 Bed 6 Bath\",\"5 Bed 7 Bath\",\"5 Bed 8 Bath\",\"5 Bed 9 Bath\",\"53 Bed 31 Bath\",\"6 Bed 1 Bath\",\"6 Bed 10 Bath\",\"6 Bed 11 Bath\",\"6 Bed 12 Bath\",\"6 Bed 14 Bath\",\"6 Bed 2 Bath\",\"6 Bed 3 Bath\",\"6 Bed 4 Bath\",\"6 Bed 5 Bath\",\"6 Bed 6 Bath\",\"6 Bed 7 Bath\",\"6 Bed 8 Bath\",\"6 Bed 9 Bath\",\"60 Bed 51 Bath\",\"64 Bed 64 Bath\",\"68 Bed 28 Bath\",\"7 Bed 1 Bath\",\"7 Bed 10 Bath\",\"7 Bed 11 Bath\",\"7 Bed 12 Bath\",\"7 Bed 13 Bath\",\"7 Bed 14 Bath\",\"7 Bed 2 Bath\",\"7 Bed 3 Bath\",\"7 Bed 4 Bath\",\"7 Bed 5 Bath\",\"7 Bed 6 Bath\",\"7 Bed 7 Bath\",\"7 Bed 8 Bath\",\"7 Bed 9 Bath\",\"70 Bed 45 Bath\",\"75 Bed 30 Bath\",\"8 Bed 1 Bath\",\"8 Bed 10 Bath\",\"8 Bed 11 Bath\",\"8 Bed 12 Bath\",\"8 Bed 13 Bath\",\"8 Bed 14 Bath\",\"8 Bed 15 Bath\",\"8 Bed 2 Bath\",\"8 Bed 3 Bath\",\"8 Bed 4 Bath\",\"8 Bed 5 Bath\",\"8 Bed 6 Bath\",\"8 Bed 7 Bath\",\"8 Bed 8 Bath\",\"8 Bed 9 Bath\",\"86 Bed 56 Bath\",\"9 Bed 10 Bath\",\"9 Bed 11 Bath\",\"9 Bed 12 Bath\",\"9 Bed 13 Bath\",\"9 Bed 14 Bath\",\"9 Bed 15 Bath\",\"9 Bed 16 Bath\",\"9 Bed 17 Bath\",\"9 Bed 19 Bath\",\"9 Bed 2 Bath\",\"9 Bed 3 Bath\",\"9 Bed 4 Bath\",\"9 Bed 5 Bath\",\"9 Bed 6 Bath\",\"9 Bed 7 Bath\",\"9 Bed 8 Bath\",\"9 Bed 9 Bath\",\"99 Bed 198 Bath\",\"Unknown Type\"],\"name\":\"\",\"parentsvalues\":[4050224952.0,12100000.0,1115141049.0,54612099.0,17257600.0,90000.0,2300000.0,199000.0,350718999.0,61565000.0,37094000.0,39125000.0,16925000.0,117995000.0,14000000.0,17900000.0,1363000.0,20903248.0,55109497.0,41069799.0,66561699.0,45922799.0,29611017.0,57034000.0,55525000.0,67294000.0,21440000.0,89500000.0,17100000.0,1589000.0,12500000.0,11950000.0,13000199.0,25473293.0,35616597.0,66887600.0,11216300.0,16529995.0,17266000.0,1923900.0,13399000.0,185884900.0,6614500.0,59990000.0,24100000.0,20450000.0,1223000.0,21611599.0,14926097.0,14949599.0,80611986.0,27917899.0,26327500.0,70743998.0,13889000.0,8125000.0,27670000.0,7175000.0,41500000.0,41550000.0,2350000.0,2650900.0,2717900.0,5524000.0,2967900.0,8702795.0,7455799.0,1054900.0,14840000.0,2500000.0,8099000.0,1650000.0,1390000.0,2375000.0,42700000.0,18075000.0,156000000.0,33000000.0,5055000.0,1689800.0,1953900.0,16722000.0,2000000.0,35998899.0,4006900.0,699500.0,1499000.0,17300000.0,14498000.0,2824900.0,500000.0,1650000.0,983000.0,17120299.0,5324999.0,7748900.0,6433999.0,12390000.0,2580000.0,399000.0,1200000.0,6214000.0,2950000.0,90000000.0,1180000.0,7823900.0,17867000.0,16888900.0,3999900.0,4499000.0,729000.0,2600000.0,5640000.0,9669900.0,1600000.0,3975000.0,435000.0,1698800.0,280000.0,21280000.0,15850000.0,1250000.0,697000.0,1050000.0,21500000.0,179900.0,10423400.0,4500000.0,7909874.0,3249000.0,6470000.0,6698500.0,4550000.0,4995000.0,9385000.0,2400000.0,795000.0,634900.0,1100000.0,2774714199.0,399900.0,11032594987.0,4172441323.0,280147351.0,24391805.0,8980000.0,380000.0,999999.0,3085000.0,550000.0,8500000.0,8500000.0,5500000.0,239000.0,1695000.0,10875000.0,10875000.0,5400000.0,2742000.0,8995000.0,1795000.0,960000.0,2200000.0,15900000.0,1350000.0,475000.0,5199000.0,11750000.0,5499900.0,9950000.0,6200000.0,3049900.0,495000.0,1350000.0,2499999.0,29950000.0,359000.0,5250000.0,7300000.0,10950000.0,3050000.0,2295000.0,2500000.0,4900000.0,1970000.0,1200000.0,3500000.0,1500000.0,4649000.0,1995000.0,3250000.0,324950.0,5995000.0,2610023752.0,95000.0,11021778568.0,12593955184.0,6657590037.0,885013156.0,196636001.0,40702900.0,629800.0,646790.0,775000.0,450000.0,7500000.0,5200000.0,12500000.0,13995000.0,21500000.0,2888000.0,985000.0,453201619.0,45880000.0,3995963657.0,10581002835.0,8796865265.0,5199742791.0,1560330093.0,419170184.0,88403429.0,20145000.0,3499900.0,2850000.0,4999000.0,11200000.0,19995000.0,1399000.0,2000000.0,64066549.0,96934000.0,28000000.0,39500000.0,897442165.0,2519845355.0,3597013442.0,4065900856.0,3462941842.0,1805140134.0,670906225.0,347275800.0,6900000.0,11640699.0,536351974.0,142519999.0,95789900.0,23750000.0,416936193.0,797219237.0,1109361429.0,1210500084.0,1681693815.0,1955963985.0,1518684032.0,1091801297.0,14950000.0,6299900.0,15000000.0,3111000.0,346348850.0,228990060.0,149044900.0,126607000.0,55000000.0,67876733.0,254052908.0,380407337.0,343183389.0,504340316.0,600833106.0,634195187.0,767650550.0,975000.0,1280000.0,1222800.0,358102000.0,334163000.0,160592000.0,126095000.0,5900000.0,9500000.0,33951699.0,178220438.0,258926100.0,195521565.0,215808980.0,228325427.0,449667897.0,290482344.0,15150000.0,220500000.0,71020000.0,184132000.0,144540000.0,13000000.0,23400000.0,36900000.0,9875000.0,8499000.0,879176400.0,137046717.0,80997594.0,57387938.0,91061873.0,77016699.0,111662800.0,155084999.0,5300000.0,5949236941.0],\"type\":\"treemap\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Property Type Hierarchy by Price\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('ef21888a-ff9a-4986-a030-64fc72d6b809');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"27026f21"},"source":["## Visualize property distribution on map\n","\n","### Subtask:\n","Generate a map visualization to show the spatial distribution of properties.\n"]},{"cell_type":"markdown","metadata":{"id":"b0d70b09"},"source":["**Reasoning**:\n","Import the folium library and create a map centered at the mean latitude and longitude of the properties in `df_plot`.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"85c3a1d1","executionInfo":{"status":"ok","timestamp":1761148618392,"user_tz":-330,"elapsed":1678,"user":{"displayName":"MADASU. GOWTHAM KUMAR SWAMY,CSE(2022) Vel Tech, Chennai","userId":"16141096446472250451"}},"outputId":"239ee09f-8acb-4b2f-aa77-61abb5e26000"},"source":["import folium\n","\n","# Assuming 'latitude' and 'longitude' columns exist in df_plot\n","# If not, we cannot create a map visualization based on location.\n","# Let's check if the columns exist first.\n","if 'latitude' in df_plot.columns and 'longitude' in df_plot.columns:\n","    # Calculate the mean latitude and longitude\n","    mean_lat = df_plot['latitude'].mean()\n","    mean_lon = df_plot['longitude'].mean()\n","\n","    # Create a map centered at the mean coordinates\n","    m = folium.Map(location=[mean_lat, mean_lon], zoom_start=10)\n","else:\n","    print(\"Latitude or longitude columns not found in the DataFrame. Cannot create a map.\")\n","    m = None # Set m to None to indicate map creation failed"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Latitude or longitude columns not found in the DataFrame. Cannot create a map.\n"]}]},{"cell_type":"markdown","metadata":{"id":"fd417fcd"},"source":["## Visualize property distribution on map\n","\n","### Subtask:\n","Generate a map visualization to show the spatial distribution of properties.\n"]},{"cell_type":"markdown","metadata":{"id":"2eb0edb2"},"source":["**Reasoning**:\n","Check if 'latitude' and 'longitude' columns exist in the DataFrame df, calculate the mean latitude and longitude of the properties from the df_plot DataFrame if the columns exist, and create a folium.Map object centered at the calculated mean coordinates with a reasonable zoom level (e.g., 10). If the columns do not exist, print a message indicating that the map cannot be created due to missing latitude and longitude data.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5f2955d7","executionInfo":{"status":"ok","timestamp":1761148632482,"user_tz":-330,"elapsed":28,"user":{"displayName":"MADASU. GOWTHAM KUMAR SWAMY,CSE(2022) Vel Tech, Chennai","userId":"16141096446472250451"}},"outputId":"33d92a45-0a8b-4efe-eabf-d8258e39f004"},"source":["import folium\n","\n","if 'latitude' in df.columns and 'longitude' in df.columns:\n","    mean_lat = df_plot['latitude'].mean()\n","    mean_lon = df_plot['longitude'].mean()\n","    m = folium.Map(location=[mean_lat, mean_lon], zoom_start=10)\n","else:\n","    print(\"Latitude or longitude columns not found in the DataFrame. Cannot create a map.\")\n","    m = None"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Latitude or longitude columns not found in the DataFrame. Cannot create a map.\n"]}]},{"cell_type":"markdown","metadata":{"id":"35840c82"},"source":["## Build an interactive real estate price analyzer in power bi\n","\n","### Subtask:\n","Provide guidance on how to use Power BI with the data for interactive analysis.\n"]},{"cell_type":"markdown","metadata":{"id":"48d6014b"},"source":["**Reasoning**:\n","Provide guidance on using Power BI for interactive analysis, covering data import, cleaning, visualization, interactivity, and publishing.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3312687e","executionInfo":{"status":"ok","timestamp":1761148668659,"user_tz":-330,"elapsed":28,"user":{"displayName":"MADASU. GOWTHAM KUMAR SWAMY,CSE(2022) Vel Tech, Chennai","userId":"16141096446472250451"}},"outputId":"5e98b916-811d-4f46-dae8-bb367c1fafdc"},"source":["print(\"\"\"\n","**Guidance on Building an Interactive Real Estate Price Analyzer in Power BI**\n","\n","This guide will walk you through the steps to use Power BI Desktop for analyzing the real estate data from the '/content/realtor-data.zip.csv' file.\n","\n","**1. Importing the Dataset into Power BI Desktop**\n","\n","*   Open Power BI Desktop.\n","*   Go to the 'Home' tab and click on 'Get Data'.\n","*   Select 'Text/CSV' from the common data sources or search for it in the 'All' category.\n","*   Click 'Connect'.\n","*   Browse to the location of your file '/content/realtor-data.zip.csv' and select it.\n","*   In the preview window, Power BI will show you the first few rows of your data. Verify that the data looks correct and the delimiter is identified properly (usually comma for CSV).\n","*   Click 'Load' to load the data directly, or 'Transform Data' to open the Power Query Editor for cleaning and transformations. It's recommended to click 'Transform Data' to clean your data first.\n","\n","**2. Performing Basic Data Cleaning and Transformations in Power Query Editor**\n","\n","The Power Query Editor allows you to clean and shape your data before loading it into the Power BI data model.\n","\n","*   **Handling Missing Values:**\n","    *   Identify columns with missing values (e.g., 'bed', 'bath', 'house_size', 'price').\n","    *   For numerical columns, you might replace missing values with the mean, median, or a specific value (e.g., 0 if appropriate), or remove rows with missing values if they are few. Right-click the column header, select 'Replace Values', or 'Remove Rows'.\n","    *   For categorical columns like 'city' or 'state', you might replace missing values with 'Unknown' or remove rows.\n","*   **Changing Data Types:**\n","    *   Ensure columns have the correct data types. For example, 'price', 'bed', 'bath', 'house_size' should be numerical types (e.g., Decimal Number, Whole Number). 'prev_sold_date' should be a Date type.\n","    *   Right-click the column header and select 'Change Type'.\n","*   **Creating New Calculated Columns:**\n","    *   Similar to the Python script, you can create a 'property_type' column based on 'bed' and 'bath'.\n","    *   Go to the 'Add Column' tab and select 'Custom Column'.\n","    *   Use Power Query M formula language to define your logic. For example:\n","        ```m\n","        if [bed] = null or [bath] = null then \"Unknown Type\"\n","        else if [bed] = 0 and [bath] >= 1 then \"Studio\"\n","        else if [bed] >= 1 and [bath] >= 1 then Text.From(Int.From([bed])) & \" Bed \" & Text.From(Int.From([bath])) & \" Bath\"\n","        else \"Other\"\n","        ```\n","    *   Click 'OK'.\n","*   Once you've finished cleaning and transforming, click 'Close & Apply' in the 'Home' tab to load the data into the Power BI data model.\n","\n","**3. Creating Key Visualizations in Power BI**\n","\n","In the Report view of Power BI Desktop, you can create various visualizations:\n","\n","*   **Price Distribution:**\n","    *   Use a Histogram or a Box Plot to visualize the distribution of the 'price' column. Drag the 'price' field to the visualization canvas and select the desired visualization type from the 'Visualizations' pane.\n","*   **Price vs. Area:**\n","    *   Use a Scatter Plot to show the relationship between 'price' and 'house_size'. Drag 'house_size' to the X-axis and 'price' to the Y-axis of the scatter plot visualization.\n","*   **Property Type Distribution:**\n","    *   Use a Bar Chart or a Treemap to show the distribution of properties by the 'property_type' you created. Drag the 'property_type' field to the visualization and use 'price' or a count of properties as the value.\n","*   **Map Visualization (with limitations):**\n","    *   Since the dataset does not contain precise latitude and longitude coordinates, you cannot create a map visualization showing exact property locations.\n","    *   However, you can visualize the distribution of properties by 'city' or 'state' using a Filled Map or a regular Map visualization, showing which areas have more listings or higher average prices. Drag 'city' or 'state' to the Location field and use 'price' or a count of properties as the value.\n","\n","**4. Creating Interactive Elements (Slicers and Filters)**\n","\n","Make your report interactive using slicers and filters:\n","\n","*   **Slicers:**\n","    *   Go to the 'Visualizations' pane and select the 'Slicer' visualization.\n","    *   Drag fields like 'city', 'state', 'bed', 'bath', or 'price' into the slicer.\n","    *   For numerical fields like 'price', Power BI automatically creates a range slicer. For categorical fields, it creates a list or dropdown.\n","    *   Users can interact with slicers to filter the entire report page based on their selections.\n","*   **Filters:**\n","    *   The 'Filters' pane allows you to apply filters at the visual, page, or report level.\n","    *   Drag fields into the 'Filters on this visual', 'Filters on this page', or 'Filters on all pages' sections and set your filtering criteria.\n","\n","**5. Creating Relationships Between Tables (Not applicable for a single CSV)**\n","\n","If you were working with multiple data sources (e.g., a table of property details and a separate table of agent information), you would use the 'Model' view in Power BI Desktop to create relationships between the tables based on common columns (e.g., 'brokered_by'). This allows you to combine data from different tables in your visualizations. For this single CSV file, this step is not necessary.\n","\n","**6. Publishing the Power BI Report**\n","\n","Once your report is ready, you can publish it to the Power BI service for sharing and collaboration:\n","\n","*   In Power BI Desktop, go to the 'Home' tab and click 'Publish'.\n","*   You will be prompted to save your report.\n","*   Choose the workspace where you want to publish the report (e.g., 'My workspace' or a shared workspace).\n","*   Once published, you can access the report in the Power BI service (app.powerbi.com), share it with others, and create dashboards based on the report visuals.\n","\n","This guide provides a starting point for building your interactive real estate price analyzer in Power BI. You can further enhance your report with more advanced calculations using DAX (Data Analysis Expressions), custom visualizations, and drill-through capabilities.\n","\"\"\")"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","**Guidance on Building an Interactive Real Estate Price Analyzer in Power BI**\n","\n","This guide will walk you through the steps to use Power BI Desktop for analyzing the real estate data from the '/content/realtor-data.zip.csv' file.\n","\n","**1. Importing the Dataset into Power BI Desktop**\n","\n","*   Open Power BI Desktop.\n","*   Go to the 'Home' tab and click on 'Get Data'.\n","*   Select 'Text/CSV' from the common data sources or search for it in the 'All' category.\n","*   Click 'Connect'.\n","*   Browse to the location of your file '/content/realtor-data.zip.csv' and select it.\n","*   In the preview window, Power BI will show you the first few rows of your data. Verify that the data looks correct and the delimiter is identified properly (usually comma for CSV).\n","*   Click 'Load' to load the data directly, or 'Transform Data' to open the Power Query Editor for cleaning and transformations. It's recommended to click 'Transform Data' to clean your data first.\n","\n","**2. Performing Basic Data Cleaning and Transformations in Power Query Editor**\n","\n","The Power Query Editor allows you to clean and shape your data before loading it into the Power BI data model.\n","\n","*   **Handling Missing Values:**\n","    *   Identify columns with missing values (e.g., 'bed', 'bath', 'house_size', 'price').\n","    *   For numerical columns, you might replace missing values with the mean, median, or a specific value (e.g., 0 if appropriate), or remove rows with missing values if they are few. Right-click the column header, select 'Replace Values', or 'Remove Rows'.\n","    *   For categorical columns like 'city' or 'state', you might replace missing values with 'Unknown' or remove rows.\n","*   **Changing Data Types:**\n","    *   Ensure columns have the correct data types. For example, 'price', 'bed', 'bath', 'house_size' should be numerical types (e.g., Decimal Number, Whole Number). 'prev_sold_date' should be a Date type.\n","    *   Right-click the column header and select 'Change Type'.\n","*   **Creating New Calculated Columns:**\n","    *   Similar to the Python script, you can create a 'property_type' column based on 'bed' and 'bath'.\n","    *   Go to the 'Add Column' tab and select 'Custom Column'.\n","    *   Use Power Query M formula language to define your logic. For example:\n","        ```m\n","        if [bed] = null or [bath] = null then \"Unknown Type\"\n","        else if [bed] = 0 and [bath] >= 1 then \"Studio\"\n","        else if [bed] >= 1 and [bath] >= 1 then Text.From(Int.From([bed])) & \" Bed \" & Text.From(Int.From([bath])) & \" Bath\"\n","        else \"Other\"\n","        ```\n","    *   Click 'OK'.\n","*   Once you've finished cleaning and transforming, click 'Close & Apply' in the 'Home' tab to load the data into the Power BI data model.\n","\n","**3. Creating Key Visualizations in Power BI**\n","\n","In the Report view of Power BI Desktop, you can create various visualizations:\n","\n","*   **Price Distribution:**\n","    *   Use a Histogram or a Box Plot to visualize the distribution of the 'price' column. Drag the 'price' field to the visualization canvas and select the desired visualization type from the 'Visualizations' pane.\n","*   **Price vs. Area:**\n","    *   Use a Scatter Plot to show the relationship between 'price' and 'house_size'. Drag 'house_size' to the X-axis and 'price' to the Y-axis of the scatter plot visualization.\n","*   **Property Type Distribution:**\n","    *   Use a Bar Chart or a Treemap to show the distribution of properties by the 'property_type' you created. Drag the 'property_type' field to the visualization and use 'price' or a count of properties as the value.\n","*   **Map Visualization (with limitations):**\n","    *   Since the dataset does not contain precise latitude and longitude coordinates, you cannot create a map visualization showing exact property locations.\n","    *   However, you can visualize the distribution of properties by 'city' or 'state' using a Filled Map or a regular Map visualization, showing which areas have more listings or higher average prices. Drag 'city' or 'state' to the Location field and use 'price' or a count of properties as the value.\n","\n","**4. Creating Interactive Elements (Slicers and Filters)**\n","\n","Make your report interactive using slicers and filters:\n","\n","*   **Slicers:**\n","    *   Go to the 'Visualizations' pane and select the 'Slicer' visualization.\n","    *   Drag fields like 'city', 'state', 'bed', 'bath', or 'price' into the slicer.\n","    *   For numerical fields like 'price', Power BI automatically creates a range slicer. For categorical fields, it creates a list or dropdown.\n","    *   Users can interact with slicers to filter the entire report page based on their selections.\n","*   **Filters:**\n","    *   The 'Filters' pane allows you to apply filters at the visual, page, or report level.\n","    *   Drag fields into the 'Filters on this visual', 'Filters on this page', or 'Filters on all pages' sections and set your filtering criteria.\n","\n","**5. Creating Relationships Between Tables (Not applicable for a single CSV)**\n","\n","If you were working with multiple data sources (e.g., a table of property details and a separate table of agent information), you would use the 'Model' view in Power BI Desktop to create relationships between the tables based on common columns (e.g., 'brokered_by'). This allows you to combine data from different tables in your visualizations. For this single CSV file, this step is not necessary.\n","\n","**6. Publishing the Power BI Report**\n","\n","Once your report is ready, you can publish it to the Power BI service for sharing and collaboration:\n","\n","*   In Power BI Desktop, go to the 'Home' tab and click 'Publish'.\n","*   You will be prompted to save your report.\n","*   Choose the workspace where you want to publish the report (e.g., 'My workspace' or a shared workspace).\n","*   Once published, you can access the report in the Power BI service (app.powerbi.com), share it with others, and create dashboards based on the report visuals.\n","\n","This guide provides a starting point for building your interactive real estate price analyzer in Power BI. You can further enhance your report with more advanced calculations using DAX (Data Analysis Expressions), custom visualizations, and drill-through capabilities.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"c6aac9e8"},"source":["## Summary:\n","\n","### Data Analysis Key Findings\n","\n","*   The dataset contains 12 columns, including `price`, `bed`, `bath`, `acre_lot`, `street`, `city`, `state`, `zip_code`, and `house_size`.\n","*   Several columns, such as `brokered_by`, `price`, `bed`, `bath`, `acre_lot`, `street`, `city`, `zip_code`, and `house_size`, contain missing values.\n","*   The primary data types are `float64` for numerical features and `object` for categorical or string data.\n","*   Visualizations of price vs. house size were successfully generated using scatter and violin plots.\n","*   A TreeMap visualizing the distribution of total price across different property types (categorized by number of beds and baths) was successfully created.\n","*   Map visualizations based on precise latitude and longitude could not be generated as these columns were missing from the dataset.\n","\n","### Insights or Next Steps\n","\n","*   Address the missing values in key columns like `price`, `bed`, `bath`, and `house_size` through imputation or removal of rows to improve the accuracy of visualizations and subsequent analysis.\n","*   Acquire or engineer geographical coordinates (latitude and longitude) for the properties based on available location data (city, state, zip code) to enable spatial distribution analysis and mapping.\n"]}]}